{"ast":null,"code":"import { ADD_TO_CART, REMOVE_FROM_CART, UPDATE_CART, REFRESH_STORE } from '../constants/constants';\nfunction getState(key) {\n  let initialState = {\n    data: []\n  };\n  return localStorage.getItem(key) && JSON.parse(localStorage.getItem(key)).cart ? JSON.parse(localStorage.getItem(key)).cart : initialState;\n}\nexport function cartReducer(state = getState('molla'), action) {\n  switch (action.type) {\n    case ADD_TO_CART:\n      var findIndex = state.data.findIndex(item => item.id == action.payload.product.id);\n      let qty = action.payload.qty ? action.payload.qty : 1;\n      if (findIndex !== -1 && action.payload.product.variants.length > 0) {\n        findIndex = state.data.findIndex(item => item.name == action.payload.product.name);\n      }\n      if (findIndex !== -1) {\n        return {\n          data: [...state.data.reduce((acc, product, index) => {\n            if (findIndex == index) {\n              acc.push({\n                ...product,\n                qty: product.qty + qty,\n                sum: (action.payload.product.sale_price ? action.payload.product.sale_price : action.payload.product.price) * (product.qty + qty)\n              });\n            } else {\n              acc.push(product);\n            }\n            return acc;\n          }, [])]\n        };\n      } else {\n        return {\n          data: [...state.data, {\n            ...action.payload.product,\n            qty: qty,\n            price: action.payload.product.sale_price ? action.payload.product.sale_price : action.payload.product.price,\n            sum: qty * (action.payload.product.sale_price ? action.payload.product.sale_price : action.payload.product.price)\n          }]\n        };\n      }\n    case REMOVE_FROM_CART:\n      return {\n        data: [...state.data.filter(item => {\n          if (item.id !== action.payload.product.id) return true;\n          if (item.name !== action.payload.product.name) return true;\n          return false;\n        })]\n      };\n    case UPDATE_CART:\n      return {\n        data: [...action.payload.cartItems]\n      };\n    case REFRESH_STORE:\n      return {\n        data: []\n      };\n    default:\n      return state;\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}