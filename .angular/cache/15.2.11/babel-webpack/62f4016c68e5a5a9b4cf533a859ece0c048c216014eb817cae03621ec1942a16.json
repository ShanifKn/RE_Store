{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let CountToComponent = /*#__PURE__*/(() => {\n  class CountToComponent {\n    constructor(elRef, renderer) {\n      this.elRef = elRef;\n      this.renderer = renderer;\n      this.isExcuted = false;\n    }\n    scrollHandler() {\n      let pt = 0,\n        amount = this.to - this.from,\n        height = this.renderer.parentNode(this.renderer.parentNode(this.renderer.parentNode(this.elRef.nativeElement))).offsetTop;\n      if (!this.isExcuted && pt <= this.speed && height >= window.pageYOffset) {\n        if (!this.isExcuted) {\n          let timer = setInterval(() => {\n            if (pt >= this.speed) {\n              clearInterval(timer);\n            }\n            this.elRef.nativeElement.innerHTML = Math.ceil(pt * amount / this.speed).toString();\n            pt = pt + this.interval;\n          }, this.interval);\n        }\n        this.isExcuted = true;\n      }\n    }\n    ngOnInit() {}\n    static {\n      this.ɵfac = function CountToComponent_Factory(t) {\n        return new (t || CountToComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: CountToComponent,\n        selectors: [[\"molla-count-to\"]],\n        hostBindings: function CountToComponent_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"scroll\", function CountToComponent_scroll_HostBindingHandler($event) {\n              return ctx.scrollHandler($event);\n            }, false, i0.ɵɵresolveWindow);\n          }\n        },\n        inputs: {\n          to: \"to\",\n          from: \"from\",\n          speed: \"speed\",\n          interval: \"interval\"\n        },\n        decls: 2,\n        vars: 0,\n        consts: [[1, \"count\"]],\n        template: function CountToComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"span\", 0);\n            i0.ɵɵtext(1, \"0\");\n            i0.ɵɵelementEnd();\n          }\n        }\n      });\n    }\n  }\n  return CountToComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}