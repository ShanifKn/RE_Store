{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport let QuantityInputComponent = /*#__PURE__*/(() => {\n  class QuantityInputComponent {\n    constructor() {\n      this.value = 1;\n      this.max = 10000;\n      this.adClass = '';\n      this.current = 1;\n      this.changeQty = new EventEmitter();\n    }\n    ngOnChanges() {\n      this.current = this.value;\n    }\n    ngOnInit() {}\n    increment() {\n      if (this.max <= 0 || this.current >= this.max) return;\n      this.current++;\n      this.changeQty.emit(this.current);\n    }\n    decrement() {\n      if (this.current > 1) {\n        this.current--;\n        this.changeQty.emit(this.current);\n      }\n    }\n    changeCurrent(event) {\n      if (parseInt(event.currentTarget.value) < this.max && parseInt(event.currentTarget.value) > 0) {\n        this.current = parseInt(event.currentTarget.value);\n        this.changeQty.emit(this.current);\n      } else {\n        event.currentTarget.value = this.current;\n      }\n    }\n    static {\n      this.ɵfac = function QuantityInputComponent_Factory(t) {\n        return new (t || QuantityInputComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: QuantityInputComponent,\n        selectors: [[\"re-store-quantity-input\"]],\n        inputs: {\n          value: \"value\",\n          max: \"max\",\n          adClass: \"adClass\"\n        },\n        outputs: {\n          changeQty: \"changeQty\"\n        },\n        features: [i0.ɵɵNgOnChangesFeature],\n        decls: 9,\n        vars: 4,\n        consts: [[1, \"input-group\", \"input-spinner\"], [1, \"input-group-prepend\"], [\"type\", \"button\", 1, \"btn\", \"btn-decrement\", \"btn-spinner\", 2, \"min-width\", \"26px\", 3, \"click\"], [1, \"icon-minus\"], [\"type\", \"number\", \"required\", \"\", \"placeholder\", \"\", \"min\", \"1\", 1, \"form-control\", 2, \"text-align\", \"center\", 3, \"max\", \"value\", \"input\"], [1, \"input-group-append\"], [\"type\", \"button\", 1, \"btn\", \"btn-increment\", \"btn-spinner\", 2, \"min-width\", \"26px\", 3, \"click\"], [1, \"icon-plus\"]],\n        template: function QuantityInputComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0)(2, \"div\", 1)(3, \"button\", 2);\n            i0.ɵɵlistener(\"click\", function QuantityInputComponent_Template_button_click_3_listener() {\n              return ctx.decrement();\n            });\n            i0.ɵɵelement(4, \"i\", 3);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(5, \"input\", 4);\n            i0.ɵɵlistener(\"input\", function QuantityInputComponent_Template_input_input_5_listener($event) {\n              return ctx.changeCurrent($event);\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"div\", 5)(7, \"button\", 6);\n            i0.ɵɵlistener(\"click\", function QuantityInputComponent_Template_button_click_7_listener() {\n              return ctx.increment();\n            });\n            i0.ɵɵelement(8, \"i\", 7);\n            i0.ɵɵelementEnd()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵclassMap(\"product-details-quantity \" + ctx.adClass);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"max\", ctx.max)(\"value\", ctx.current);\n          }\n        }\n      });\n    }\n  }\n  return QuantityInputComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}