{"ast":null,"code":"import _asyncToGenerator from \"/home/shanif/Pictures/New Project/demo28/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport Cookie from 'js-cookie';\nimport { QuickViewComponent } from 'src/app/shared/components/modals/quick-view/quick-view.component';\nimport { QuickViewTwoComponent } from 'src/app/shared/components/modals/quick-view-two/quick-view-two.component';\nimport { NewsletterModalComponent } from '../components/modals/newsletter-modal/newsletter-modal.component';\nimport { LoginModalComponent } from '../components/modals/login-modal/login-modal.component';\nimport { VideoModalComponent } from '../components/modals/video-modal/video-modal.component';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common/http\";\nexport let ModalService = /*#__PURE__*/(() => {\n  class ModalService {\n    constructor(modalService, router, http) {\n      this.modalService = modalService;\n      this.router = router;\n      this.http = http;\n      this.products = [];\n      this.modalOption1 = {\n        centered: true,\n        size: 'xl',\n        windowClass: 'newsletter-modal',\n        beforeDismiss: function () {\n          var _ref = _asyncToGenerator(function* () {\n            document.querySelector('body')?.classList.remove('modal-open');\n            yield new Promise(resolve => {\n              setTimeout(() => {\n                resolve('success');\n              }, 250);\n            });\n            document.querySelector('.logo').focus({\n              preventScroll: true\n            });\n            return true;\n          });\n          return function beforeDismiss() {\n            return _ref.apply(this, arguments);\n          };\n        }()\n      };\n      this.modalOption2 = {\n        centered: true,\n        size: 'lg',\n        windowClass: 'login-modal',\n        beforeDismiss: function () {\n          var _ref2 = _asyncToGenerator(function* () {\n            document.querySelector('body')?.classList.remove('modal-open');\n            yield new Promise(resolve => {\n              setTimeout(() => {\n                resolve('success');\n              }, 300);\n            });\n            document.querySelector('.logo').focus({\n              preventScroll: true\n            });\n            return true;\n          });\n          return function beforeDismiss() {\n            return _ref2.apply(this, arguments);\n          };\n        }()\n      };\n      this.modalOption3 = {\n        centered: true,\n        size: 'xl',\n        scrollable: false,\n        windowClass: \"vb-modal\",\n        beforeDismiss: function () {\n          var _ref3 = _asyncToGenerator(function* () {\n            document.querySelector('body')?.classList.remove('modal-open');\n            yield new Promise(resolve => {\n              setTimeout(() => {\n                resolve('success');\n              }, 300);\n            });\n            document.querySelector('.logo').focus({\n              preventScroll: true\n            });\n            return true;\n          });\n          return function beforeDismiss() {\n            return _ref3.apply(this, arguments);\n          };\n        }()\n      };\n      this.modalOption4 = {\n        centered: true,\n        size: 'xl',\n        beforeDismiss: function () {\n          var _ref4 = _asyncToGenerator(function* () {\n            document.querySelector('body')?.classList.remove('modal-open');\n            yield new Promise(resolve => {\n              setTimeout(() => {\n                resolve('success');\n              }, 300);\n            });\n            document.querySelector('.logo').focus({\n              preventScroll: true\n            });\n            return true;\n          });\n          return function beforeDismiss() {\n            return _ref4.apply(this, arguments);\n          };\n        }()\n      };\n    }\n    openNewsletter() {\n      if (this.timer) window.clearTimeout(this.timer);\n      if (!Cookie.get(`hideNewsletter-${environment.demo}`)) {\n        this.timer = window.setTimeout(() => {\n          this.modalService.dismissAll();\n          document.querySelector('.logo').focus({\n            preventScroll: true\n          });\n          setTimeout(() => {\n            if (this.router.url === '/' && !document.querySelector('.newsletter-modal')) {\n              this.modalService.open(NewsletterModalComponent, this.modalOption1);\n            }\n          }, 400);\n        }, 5000);\n      }\n    }\n    // Show login modal\n    showLoginModal() {\n      document.querySelector('.logo').focus({\n        preventScroll: true\n      });\n      this.modalService.open(LoginModalComponent, this.modalOption2);\n    }\n    // Show Video modal\n    showVideoModal() {\n      this.modalService.open(VideoModalComponent, this.modalOption3);\n    }\n    /**\n     * Show Product in QuickView\n     */\n    showQuickView(product) {\n      document.querySelector('.logo').focus({\n        preventScroll: true\n      });\n      const modalRef = this.modalService.open(QuickViewComponent, {\n        ...this.modalOption4,\n        windowClass: 'quickView-modal'\n      });\n      modalRef.componentInstance.slug = product.slug;\n    }\n    /**\n     * Show Product in QuickViewTwo\n     */\n    showQuickViewTwo(product) {\n      document.querySelector('.logo').focus({\n        preventScroll: true\n      });\n      const modalRef = this.modalService.open(QuickViewTwoComponent, {\n        ...this.modalOption4,\n        windowClass: 'quickView-modal'\n      });\n      modalRef.componentInstance.slug = product.slug;\n    }\n    static {\n      this.ɵfac = function ModalService_Factory(t) {\n        return new (t || ModalService)(i0.ɵɵinject(i1.NgbModal), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: ModalService,\n        factory: ModalService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ModalService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}