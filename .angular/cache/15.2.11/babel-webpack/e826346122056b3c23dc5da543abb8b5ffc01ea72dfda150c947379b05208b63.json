{"ast":null,"code":"import { DOCUMENT } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nexport let UtilsService = /*#__PURE__*/(() => {\n  class UtilsService {\n    constructor(document) {\n      this.document = document;\n      this.isSticky = false;\n      this.isFluidLayout = false;\n      this.stickyHeight = 54;\n    }\n    /**\n     * utils to detect safari browser\n     * @return {bool}\n     */\n    isSafariBrowser() {\n      let sUsrAg = navigator.userAgent;\n      if (sUsrAg.indexOf('Safari') !== -1 && sUsrAg.indexOf('Chrome') === -1) return true;\n      return false;\n    }\n    /**\n     * utils to detect Edge browser\n     * @return {bool}\n     */\n    isEdgeBrowser() {\n      let sUsrAg = navigator.userAgent;\n      if (sUsrAg.indexOf(\"Edge\") > -1) return true;\n      return false;\n    }\n    /**\n     * utils to set header sticky\n     */\n    setStickyHeader() {\n      let outerHeight = $('.header').outerHeight();\n      if (window.pageYOffset > outerHeight && window.innerWidth > 991 && $('.sticky-header')) {\n        this.isSticky = true;\n        this.stickyHeight = $('.sticky-header').outerHeight();\n      } else {\n        this.isSticky = false;\n      }\n    }\n    /**\n     * Scrolling to Page content section\n     */\n    scrollToPageContent(target = '.page-content') {\n      let to = document.querySelector(target).offsetTop - 74;\n      if (this.isSafariBrowser() || this.isEdgeBrowser()) {\n        let pos = window.pageYOffset;\n        let timerId = setInterval(() => {\n          if (pos <= to) clearInterval(timerId);else {\n            window.scrollBy(0, -120);\n            pos -= 120;\n          }\n        }, 1);\n      } else {\n        window.scrollTo({\n          top: to,\n          behavior: 'smooth'\n        });\n      }\n    }\n    /**\n     * Scroll Top Button\n     * @param e\n     */\n    scrollTop(e) {\n      if (this.isSafariBrowser() || this.isEdgeBrowser()) {\n        let pos = window.pageYOffset;\n        let timer_id = setInterval(() => {\n          if (pos <= 0) clearInterval(timer_id);\n          window.scrollBy(0, -120);\n          pos -= 120;\n        }, 1);\n      } else {\n        window.scrollTo({\n          top: 0,\n          behavior: 'smooth'\n        });\n      }\n      e.preventDefault();\n    }\n    catFilter(products = [], category, flag = false) {\n      if (category[0] === 'All') return products;\n      return products.filter(item => {\n        for (let i = 0; i < category.length; i++) {\n          if (item.category.find(cat => cat.slug == category[i])) {\n            if (!flag) return true;\n          } else {\n            if (flag) return false;\n          }\n        }\n        if (flag) return true;else return false;\n      });\n    }\n    attrFilter(products = [], attr) {\n      return products.filter(item => {\n        if (attr === 'all') {\n          return true;\n        }\n        if (attr === 'sale' && item.sale_price) {\n          return true;\n        }\n        if (attr === 'rated' && item.ratings > 3) {\n          return true;\n        }\n        if (attr === 'until' && item.until) {\n          return true;\n        }\n        return item[attr] === true;\n      });\n    }\n    static {\n      this.ɵfac = function UtilsService_Factory(t) {\n        return new (t || UtilsService)(i0.ɵɵinject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: UtilsService,\n        factory: UtilsService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return UtilsService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}