{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let TabClickDirective = /*#__PURE__*/(() => {\n  class TabClickDirective {\n    constructor(render) {\n      this.render = render;\n    }\n    onClick(e) {\n      // remove previous active tab\n      const parent = e.target.closest('[role=\"tablist\"]');\n      const activeLink = parent.querySelector('[role=\"tab\"].active');\n      if (activeLink) {\n        this.render.removeClass(activeLink, 'active');\n      }\n      // set active tab\n      const currentLink = e.target.closest('[role=\"tab\"]');\n      if (currentLink) {\n        this.render.addClass(currentLink, 'active');\n      }\n      e.preventDefault();\n    }\n    static {\n      this.ɵfac = function TabClickDirective_Factory(t) {\n        return new (t || TabClickDirective)(i0.ɵɵdirectiveInject(i0.Renderer2));\n      };\n    }\n    static {\n      this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n        type: TabClickDirective,\n        selectors: [[\"\", \"tabClick\", \"\"]],\n        hostBindings: function TabClickDirective_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"click\", function TabClickDirective_click_HostBindingHandler($event) {\n              return ctx.onClick($event);\n            });\n          }\n        }\n      });\n    }\n  }\n  return TabClickDirective;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}